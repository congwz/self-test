<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.viverselftest.dao.jde.EasyPOIMapper">

    <resultMap id="excelOneToMoreExport" type="com.viverselftest.po.ExcelExportOneToMorePO">
        <id column="userno" property="user_id"></id>
        <result column="username" property="username"/>

        <association property="department" javaType="com.viverselftest.po.ExcelExportOneToMorePartPO">
            <id column="partno" property="part_id"></id>
            <result column="partname" property="part_name"/>
        </association>

        <collection property="display" ofType="com.viverselftest.po.ExcelExportSimplePO">

            <!--<id column="id" property="display_id"></id>-->
            <result column="work_code" property="work_code"/>
            <result column="user_name" property="user_name"/>
            <result column="display_code" property="display_code"/>
            <result column="display_name" property="display_name"/>
            <result column="display_classify" property="display_classify"/>
            <result column="create_time" property="create_time"/>

        </collection>
        <!--<collection property="display" ofType="com.viverselftest.po.ExcelExportSimplePO" resultMap="displayList">
        </collection>-->
    </resultMap>

    <!--<resultMap id="displayList" type="com.viverselftest.po.ExcelExportSimplePO">
        <result column="work_code" property="work_code"/>
        <result column="user_name" property="user_name"/>
        <result column="display_code" property="display_code"/>
        <result column="display_name" property="display_name"/>
        <result column="display_classify" property="display_classify"/>
        <result column="create_time" property="create_time"/>

        <collection property="display"
                    select="getDisplayInfo" column="{work_code=work_code,display_code=display_code}">
        </collection>
    </resultMap>

    <select id="getDisplayInfo" resultType="com.viverselftest.po.ExcelExportSimplePO">
        select work_code,user_name,display_code,display_name,display_classify,create_time
        from PA_VIVER_TEST &lt;!&ndash;where work_code = #{work_code} &ndash;&gt;&lt;!&ndash;and display_code = #{display_code}&ndash;&gt;
    </select>-->

    <select id="findOneToMoreExcelExportData" resultMap="excelOneToMoreExport">
        select pvu.userno,pvu.username,pvd.partno,pvd.partname,
        <!--id,-->
        work_code,user_name,display_code,display_name,display_classify,create_time
        from PA_VIVER_TEST_USER pvu,
        PA_VIVER_TEST_DEPARTMENT pvd,
        <!--PA_VIVER_TEST_2 pvt-->
        PA_VIVER_TEST pvt
        where pvu.userno = pvd.userno and pvu.userno = pvt.work_code

    </select>







    <!-- 查询报价单表头 -->
    <select id="findQuotedHead" parameterType="com.viverselftest.dto.inquireonline.InquireOnlineConditionsHelpDTO" resultType="com.viverselftest.po.InquireOnlineHeadPO">
        select rownum rn,t.* from
        (
        select pqh.qpnumber QPNumber,pqh.qpenddate QPEndDate,
        (case when t.bjzt like '%取消%' then '取消' when t.bjzt like '%终止%' then '终止'
        when t.bjzt like '%进行中%' then '进行中' when t.bjzt like '%已过期%' then '已过期' else '结束' end) QPStatus,
        pqh.qporiginaldate QPOriginalDate,pqh.qpcompanycode QPCompanyCode,pqh.qpcompanyname QPCompanyName,
        pqh.qpbranchcode QPBranchCode,(select trim(drdl01) from prodctl.f0005 where drsy = '00' and drrt = '33' and trim(drky) = pqh.qpbranchcode) QPBranchName,pqh.qpcreateby QPCreateBy,pqh.qporiginator QPOriginator,
        pqh.qpcompanycode||' '||pqh.qpcompanyname QPCompany
        from PA_QUOTEDPRICE pqh
        join
        (select pqh.qpnumber,listagg((case when pqh.QPStatus = '3' then '终止' when pqh.QPStatus = '4' then '取消'
        when pqds.qpnumber is null and to_char(sysdate,'YYYY-MM-DD HH24:MI') > pqh.qpenddate then '已过期'
        when pqds.qpnumber is not null then '结束'
        when pqds.qpnumber is null and to_char(sysdate,'YYYY-MM-DD HH24:MI') &lt;= pqh.qpenddate then '进行中' end), ',') within GROUP(order by(pqh.qpnumber)) as bjzt
        from PA_QUOTEDPRICE pqh
        join PA_QUOTEDPRICE_SUPPLIER pqhs on pqh.qpnumber = pqhs.qpnumber
        left join PA_QUOTEDPRICE_DETAIL_SUPPLIER pqds on pqhs.qpnumber = pqds.qpnumber and pqhs.qpslsuppliercode = pqds.qpdslsuppliercode
        group by pqh.qpnumber
        ) t on pqh.qpnumber = t.qpnumber
        <where>
            <if test="branch_code != null and branch_code != '' ">
                pqh.qpbranchcode in (${branch_code})
            </if>
            <if test="materiel_type != null and materiel_type != '' ">
                and pqh.qpmaterialtype in (${materiel_type})
            </if>
            <if test="urgency != null and urgency != '' ">
                and pqh.qpurgent in (${urgency})
            </if>
        </where>
        ) t
        <where>
            <if test="head_conditions != null">
                and  ${head_conditions}
            </if>
        </where>

        <if test="sort_colum != null and sort_colum != '' ">
            order by ${sort_colum} ${sort_rule}
        </if>

    </select>

    <!-- 查询报价单明细 -->
    <select id="findQuotedDetail" parameterType="com.viverselftest.dto.inquireonline.InquireOnlineConditionsHelpDTO" resultType="com.viverselftest.po.InquireOnlineDetailPO">
        select rownum rn,t.* from
        (
        select distinct pqhs.qpslsuppliercode QPSLSupplierCode,pqd.qpnumber QPNumber,pqd.qpdfindnum QPDFindNum,
        pqd.qpditemno QPDItemNo,pqd.qpditemname QPDItemName,
        (case when NVL(pqd.qpdstatus,'N') = '3' then '终止' when NVL(pqd.qpdstatus,'N') = '4' then '取消'
        when pqds.qpnumber is not null then '结束'
        when NVL(pqd.qpdstatus,'N') = 'N' and pqds.qpnumber is null and to_char(sysdate,'YYYY-MM-DD HH24:MI') > pqh.qpenddate then '已过期' end) QPDSLStatus,
        pqd.qpdmanufactureno QPDManufactureNo,pqd.qpdmanufacturename QPDManufactureName,pqd.qpdspec QPDSpec,pqd.qpditemunit QPDItemUnit,
        pqd.qpddrawno QPDDrawNo,pqd.qpdrev QPDRev,pqd.qpdcustomcode QPDCustomCode,pqd.qpdcustomname QPDCustomName,
        pqd.qpdstandardcode QPDStandardCode,pqd.qpdstandardname QPDStandardName,pqd.qpdmodule QPDModule,
        pqd.qpdisurgent QPDIsUrgent,pqd.qpdrequireddate QPDRequiredDate,pqh.qpcreatedate QPCreateDate,
        pqds.qpdslsupplieruseraccount QPDSLSupplierUserAccount,pqds.qpdslsupplierusername QPDSLSupplierUserName,
        pqh.qpsendaddresscode QPSendAddressCode,pqh.qpsendaddress QPSendAddress,pqh.qpcurrency,
        pqd.qpdrequirebillno QPDRequireBillNo,'OR' ysdhlx,pqd.qpdcompanycode QPDCompanyCode,
        pqd.qpdcompanyname QPDCompanyName,pqd.qpdrbnfindnum QPDRBNFindNum,pqh.qpenddate QPEndDate,
        pqds.qpdslcreatedate QPDAnswerDate,pqh.qporiginaldate QPOriginalDate,
        pqh.qporiginator QPOriginator,pqh.qpcompanycode QPCompanyCode,pqh.qpcompanyname QPCompanyName,
        pqd.qpdquitdate QPDQuitDate,pqd.qpdstopdate QPDStopDate,
        pqd.qpddepartmentcode QPDDepartmentCode,pqd.qpddepartmentname QPDDepartmentName,
        pqd.qpdrbnremark QPDRBNRemark,pqds.qpdslacceptdate QPDSLAcceptDate,
        pqds.qpdsluntaxmoney QPDSLUnTaxMoney,pqds.qpdslremark QPDSLRemark,
        trim(abalph) provider_name,cusOA.email provider_email,
        pqhs.qpslsuppliercode||' '||trim(abalph) supplier,
        pqd.qpdcustomcode||' '||pqd.qpdcustomname QPDCustom,
        pqd.qpdstandardcode||' '||pqd.qpdstandardname QPDStandard,
        pqh.qpsendaddresscode||' '||pqh.qpsendaddress QPSend,
        pqd.qpdcompanycode||' '||pqd.qpdcompanyname QPDCompany,
        pqh.qpcompanycode||' '||pqh.qpcompanyname QPCompany
        from PA_QUOTEDPRICE_DETAIL pqd
        join PA_QUOTEDPRICE pqh on pqd.qpnumber = pqh.qpnumber
        join PA_QUOTEDPRICE_SUPPLIER pqhs on pqh.qpnumber = pqhs.qpnumber
        left join PA_QUOTEDPRICE_DETAIL_SUPPLIER pqds on pqd.qpnumber = pqds.qpnumber and pqd.qpdfindnum = pqds.qpdslfindnum and pqhs.qpslsuppliercode = pqds.qpdslsuppliercode
        left join f0101 on to_char(f0101.aban8) = pqhs.qpslsuppliercode
        left join (select * from CRM_CustomerInfo where type = 2) cusOA on pqhs.qpslsuppliercode = cusOA.engname
        <where>
            <if test="branch_code != null and branch_code != '' ">
                pqh.qpbranchcode in (${branch_code})
            </if>
            <if test="materiel_type != null and materiel_type != '' ">
                and pqh.qpmaterialtype in (${materiel_type})
            </if>
            <if test="urgency != null and urgency != '' ">
                and pqh.qpurgent in (${urgency})
            </if>
        </where>
        ) t
        <where>
            <if test="detail_conditions != null">
                and  ${detail_conditions}
            </if>
        </where>

        <if test="sort_colum != null and sort_colum != '' ">
            order by ${sort_colum} ${sort_rule}
        </if>

    </select>


</mapper>